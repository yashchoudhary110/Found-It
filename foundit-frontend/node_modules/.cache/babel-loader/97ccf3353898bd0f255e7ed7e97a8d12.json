{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashc\\\\Desktop\\\\foundit2_final_g\\\\foundit2_final_g\\\\foundit-frontend\\\\src\\\\admin\\\\Admin_item.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Itemcontext from '../context APIs/items/Itemcontext'; //component defination\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Admin_item(props) {\n  _s();\n\n  const context = useContext(Itemcontext); //retrive the context object from itemcontext\n\n  const {\n    deleteItem\n  } = context;\n  const {\n    _id,\n    name,\n    date,\n    isreported,\n    status,\n    image_name,\n    user_name,\n    public_id\n  } = props.item;\n  const def_img = process.env.REACT_APP_DEFAULT; //component receve props as parametr to extracted properties from props.item such as _id,name.date,image_name..etc\n\n  return (\n    /*#__PURE__*/\n    //rendering the components;\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"row\",\n          children: props.cnt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: date.slice(0, 10)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: isreported ? \"Yes\" : \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image_name //rendered inside one of the table cells to display image.\n            ,\n            className: \"card-img-top rounded\",\n            alt: \"course\",\n            onError: _ref => {\n              let {\n                currentTarget\n              } = _ref;\n              currentTarget.onerror = null; // prevents looping\n\n              currentTarget.src = {\n                def_img\n              };\n            },\n            style: {\n              \"width\": 50,\n              \"height\": 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"h6 fw-light mb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                let flag = window.confirm(\"Do you realy want to delete this Item?\");\n\n                if (flag) {\n                  let a = deleteItem(_id, public_id);\n                  a.then(d => {\n                    if (d) {\n                      props.showAlert(\"Item deleted successfully\", 'success');\n                    }\n                  });\n                }\n              },\n              className: \"btn btn-light btn-lg p-0\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n}\n\n_s(Admin_item, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = Admin_item;\nexport default Admin_item; //This component is meant to be used within a larger React application that utilizes a context to manage items and provides the necessary props for this component to function properly.\n//  It renders a row of data with item details, an image, and a delete button.\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin_item\");","map":{"version":3,"sources":["C:/Users/yashc/Desktop/foundit2_final_g/foundit2_final_g/foundit-frontend/src/admin/Admin_item.js"],"names":["React","useContext","Itemcontext","Admin_item","props","context","deleteItem","_id","name","date","isreported","status","image_name","user_name","public_id","item","def_img","process","env","REACT_APP_DEFAULT","cnt","slice","currentTarget","onerror","src","flag","window","confirm","a","then","d","showAlert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,mCAAxB,C,CACA;;;;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAMC,OAAO,GAAGJ,UAAU,CAACC,WAAD,CAA1B,CADyB,CACe;;AACxC,QAAM;AAAEI,IAAAA;AAAF,MAAiBD,OAAvB;AACA,QAAM;AAAEE,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,UAAnB;AAA+BC,IAAAA,MAA/B;AAAuCC,IAAAA,UAAvC;AAAoDC,IAAAA,SAApD;AAA+DC,IAAAA;AAA/D,MAA4EV,KAAK,CAACW,IAAxF;AAEA,QAAMC,OAAO,GAACC,OAAO,CAACC,GAAR,CAAYC,iBAA1B,CALyB,CAM3B;;AACE;AAAA;AAAQ;AACN;AAAA,6BACE;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA,oBAAiBf,KAAK,CAACgB;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKZ;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAKK;AAAL;AAAA;AAAA;AAAA;AAAA,gBAHF,eAME;AAAA,oBAAKJ,IAAI,CAACY,KAAL,CAAW,CAAX,EAAc,EAAd;AAAL;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA,oBAAKX,UAAU,GAAG,KAAH,GAAW;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAA,iCACG;AAAK,YAAA,GAAG,EAAEC,UAAV,CAAqB;AAArB;AACC,YAAA,SAAS,EAAC,sBADX;AACkC,YAAA,GAAG,EAAC,QADtC;AAEC,YAAA,OAAO,EAAE,QAAuB;AAAA,kBAAtB;AAAEU,gBAAAA;AAAF,eAAsB;AAC9BA,cAAAA,aAAa,CAACC,OAAd,GAAwB,IAAxB,CAD8B,CACA;;AAC9BD,cAAAA,aAAa,CAACE,GAAd,GAAoB;AAACR,gBAAAA;AAAD,eAApB;AACD,aALF;AAKI,YAAA,KAAK,EAAE;AAAE,uBAAS,EAAX;AAAe,wBAAU;AAAzB;AALX;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBATF,eAiBE;AAAA,iCACE;AAAM,YAAA,SAAS,EAAC,kBAAhB;AAAA,mCACE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAE,MAAM;AACnC,oBAAIS,IAAI,GAAGC,MAAM,CAACC,OAAP,CAAe,wCAAf,CAAX;;AACA,oBAAIF,IAAJ,EAAU;AACR,sBAAIG,CAAC,GAAGtB,UAAU,CAACC,GAAD,EAAMO,SAAN,CAAlB;AACAc,kBAAAA,CAAC,CAACC,IAAF,CAAQC,CAAD,IAAO;AACZ,wBAAIA,CAAJ,EAAO;AACL1B,sBAAAA,KAAK,CAAC2B,SAAN,CAAgB,2BAAhB,EAA6C,SAA7C;AACD;AACF,mBAJD;AAKD;AACF,eAVD;AAUG,cAAA,SAAS,EAAC,0BAVb;AAAA,qCAWE;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AADF;AAyCD;;GAhDQ5B,U;;KAAAA,U;AAkDT,eAAeA,UAAf,C,CACA;AACA","sourcesContent":["import React, { useContext } from 'react'\r\nimport Itemcontext from '../context APIs/items/Itemcontext';\r\n//component defination\r\nfunction Admin_item(props) {\r\n  const context = useContext(Itemcontext);//retrive the context object from itemcontext\r\n  const { deleteItem } = context;\r\n  const { _id, name, date, isreported, status, image_name , user_name, public_id} = props.item;\r\n\r\n  const def_img=process.env.REACT_APP_DEFAULT;\r\n//component receve props as parametr to extracted properties from props.item such as _id,name.date,image_name..etc\r\n  return (//rendering the components;\r\n    <>\r\n      <tr>\r\n        <th scope=\"row\">{props.cnt}</th>\r\n        <td>{name}</td>\r\n        <td>{user_name}</td>\r\n        {/* <td>{type}</td> */}\r\n        {/* <td>{place}</td> */}\r\n        <td>{date.slice(0, 10)}</td>\r\n        <td>{isreported ? \"Yes\" : \"No\"}</td>\r\n        <td>{status}</td>\r\n        <td>\r\n          {<img src={image_name}//rendered inside one of the table cells to display image.\r\n            className=\"card-img-top rounded\" alt=\"course\"\r\n            onError={({ currentTarget }) => {\r\n              currentTarget.onerror = null; // prevents looping\r\n              currentTarget.src = {def_img};\r\n            }} style={{ \"width\": 50, \"height\": 50 }} />}\r\n        </td>\r\n        <td>\r\n          <span className=\"h6 fw-light mb-0\">\r\n            <button type=\"button\" onClick={() => {\r\n              let flag = window.confirm(\"Do you realy want to delete this Item?\");\r\n              if (flag) {\r\n                let a = deleteItem(_id, public_id);\r\n                a.then((d) => {\r\n                  if (d) {\r\n                    props.showAlert(\"Item deleted successfully\", 'success');\r\n                  }\r\n                })\r\n              }\r\n            }} className=\"btn btn-light btn-lg p-0\">\r\n              <i className=\"bi bi-trash\"></i>\r\n            </button>\r\n          </span>\r\n        </td>\r\n      </tr>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Admin_item\r\n//This component is meant to be used within a larger React application that utilizes a context to manage items and provides the necessary props for this component to function properly.\r\n//  It renders a row of data with item details, an image, and a delete button."]},"metadata":{},"sourceType":"module"}