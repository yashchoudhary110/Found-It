{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashc\\\\Desktop\\\\foundit2_final_g\\\\foundit2_final_g\\\\foundit-frontend\\\\src\\\\context APIs\\\\items\\\\Itemstates.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Itemcontext from \"./Itemcontext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Itemstates(props) {\n  _s();\n\n  const host = \"http://localhost:5000\";\n  const itemsinitially = [];\n  const [items, setItems] = useState(itemsinitially);\n  const [item, setItem] = useState(itemsinitially);\n  const [allNotes, setAllNotes] = useState(itemsinitially);\n  const [userData, setUser] = useState(itemsinitially);\n  const [allusers, setAllusers] = useState(itemsinitially);\n  const [allitems, setAllitems] = useState(itemsinitially);\n  const [uploader, setUploader] = useState(itemsinitially);\n  const [placementItems, setPlacementItems] = useState(itemsinitially);\n  const [pItem, setPItem] = useState(itemsinitially);\n  const [isAdded, setisAdded] = useState(false); // 1. ******** Fetch all items using fetch API *********\n\n  const fetchAllItems = async () => {\n    // Method-1   ****API call****\n    const response = await fetch(`/api/item/fetchitems`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth_token': localStorage.getItem('auth_token')\n      }\n    });\n    const json = await response.json();\n    if (json.success) setItems(json.items_list);\n    return json;\n  }; // 2. ******** Add A Item ********\n\n\n  const addItem = async data => {\n    setisAdded(false);\n    const response = await fetch(`/api/item/uploaditem`, {\n      method: 'POST',\n      headers: {\n        'auth_token': localStorage.getItem('auth_token')\n      },\n      body: data\n    });\n    const json = await response.json();\n\n    if (json.success) {\n      setisAdded(true);\n      setItems(items.concat(json.savedItem));\n      document.getElementById('modalDismiss2').click();\n    } else {\n      alert(json.message);\n    }\n\n    return json.success;\n  }; // 3. ******** Delete A Item ********\n\n\n  const deleteItem = async (id, public_id) => {\n    const response = await fetch(`/api/item/deleteItem/${id}/${public_id}`, {\n      method: 'DELETE',\n      headers: {\n        'auth_token': localStorage.getItem('auth_token'),\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n\n    if (!json.success) {\n      alert(json.message);\n    } else {\n      const newItems = items.filter(e => {\n        return e._id !== id;\n      });\n      setItems(newItems);\n      const newAllItems = allitems.filter(e => {\n        return e._id !== id;\n      });\n      setAllitems(newAllItems);\n    }\n\n    return json.success;\n  }; // 4. ******** Edit a Item ********\n\n\n  const editItem = async (data, id, public_id) => {\n    const response = await fetch(`/api/item/updateItem/${id}/${public_id}`, {\n      method: 'PUT',\n      headers: {\n        'auth_token': localStorage.getItem('auth_token')\n      },\n      body: data\n    });\n    const json = await response.json();\n\n    if (json.success) {\n      const item = json.item;\n      let newItems = JSON.parse(JSON.stringify(items));\n\n      for (let index = 0; index < items.length; index++) {\n        const element = items[index];\n\n        if (element._id === id) {\n          newItems[index].name = item.name;\n          newItems[index].description = item.description;\n          newItems[index].type = item.type;\n          newItems[index].date = item.date;\n          newItems[index].place = item.place;\n          newItems[index].image_name = item.image_name;\n          break;\n        }\n      }\n\n      setItems(newItems);\n      return json.success;\n    } else {\n      alert(json.message);\n      return json.success;\n    }\n  }; // 5. ********clear the Items ********\n\n\n  const clearItems = () => {\n    setItems(itemsinitially);\n    setUser(itemsinitially);\n    setAllusers(itemsinitially);\n    setUploader(itemsinitially);\n    setAllitems(itemsinitially);\n  }; // 6. ******** Fetch a item using fetch API *********\n\n\n  const getAItem = async id => {\n    // Method-1   ****API call****\n    const response = await fetch(`/api/item/getAItem/${id}`, {\n      method: 'GET',\n      headers: {\n        'auth_token': localStorage.getItem('auth_token')\n      }\n    });\n    const json = await response.json();\n    if (json.success) setItem(json.item);\n    return json;\n  }; // 5. ******** Add Placement ********\n\n\n  const addplacementexp = async (company_name, profile, date, No_students, No_rounds, intern_or_fte, round_exp) => {\n    const response = await fetch(`/api/item/addplacementexp`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth_token': localStorage.getItem('auth_token')\n      },\n      body: JSON.stringify({\n        company_name: company_name,\n        profile: profile,\n        date: date,\n        No_students: No_students,\n        No_rounds: No_rounds,\n        intern_or_fte: intern_or_fte,\n        round_exp: round_exp\n      })\n    });\n    const json = await response.json();\n    return json.success;\n  }; // 6. ******** Fetch Placement ********\n\n\n  const fetchPlacements = async () => {\n    const response = await fetch(`/api/item/fetchPlacements`, {\n      method: 'POST',\n      headers: {\n        // 'Content-Type': 'application/json',\n        'auth_token': localStorage.getItem('auth_token')\n      } // body: JSON.stringify({company_name:company_name, profile:profile, date:date, No_students:No_students, No_rounds:No_rounds, intern_or_fte:intern_or_fte, round_exp:round_exp})\n\n    });\n    const json = await response.json();\n    if (json.success) setPlacementItems(json.allitems);\n    return json.success;\n  }; // 7. ****** Get All items || ADMIN Access ONLY ********\n\n\n  const getAllItems = async () => {\n    const response = await fetch(`/api/item/getAllItems`, {\n      method: 'GET',\n      headers: {\n        'auth_token': localStorage.getItem('auth_token')\n      }\n    });\n    const json = await response.json();\n    if (json.success) setAllitems(json.allitems);\n    return json;\n  }; // 5. ******** Fetch Placement ********\n\n\n  const fetchPItem = async _id => {\n    const response = await fetch(`/api/item/fetchPItem/${_id}`, {\n      method: 'GET',\n      headers: {\n        // 'Content-Type': 'application/json',\n        'auth_token': localStorage.getItem('auth_token')\n      } // body: JSON.stringify({company_name:company_name, profile:profile, date:date, No_students:No_students, No_rounds:No_rounds, intern_or_fte:intern_or_fte, round_exp:round_exp})\n\n    });\n    const json = await response.json();\n    console.log(json);\n    if (json.success) setPItem(json.item);\n    return json;\n  }; // 1. ******** Get Loggedin User details ********\n\n\n  const getUser = async () => {\n    // API Call\n    const response = await fetch(`/api/auth/getuser`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth_token': localStorage.getItem('auth_token')\n      }\n    });\n    const json = await response.json();\n    setUser(json.user_data);\n    return json;\n  }; // 2. ******** Get User details with Id ********(Login Required)\n\n\n  const getUserById = async id => {\n    const response = await fetch(`/api/auth/getUserById/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth_token': localStorage.getItem('auth_token')\n      }\n    });\n    const json = await response.json();\n    setUploader(json.uploader);\n    return json;\n  }; //3. ****** Get All user || ADMIN Access ONLY ********\n\n\n  const getAllUsers = async () => {\n    const response = await fetch(`/api/auth/getAllUsers`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth_token': localStorage.getItem('auth_token')\n      }\n    });\n    const json = await response.json();\n    setAllusers(json.users);\n    return json;\n  }; //4. ****** Block a user || ADMIN Access ONLY ********\n\n\n  const blockAUser = async id => {\n    const response = await fetch(`/api/auth/blockAUser/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth_token': localStorage.getItem('auth_token')\n      }\n    });\n    const json = await response.json();\n    return json;\n  }; //5. ****** add a noted ********\n\n\n  const addnotes = async data => {\n    setisAdded(false);\n    const response = await fetch(`/api/item/addnotes`, {\n      method: 'POST',\n      headers: {\n        'auth_token': localStorage.getItem('auth_token')\n      },\n      body: data\n    });\n    const json = await response.json();\n    return json;\n  }; //6. ****** fetch All Notes ********\n\n\n  const fetchAllNotes = async () => {\n    const response = await fetch(`/api/item/fetchAllNotes`, {\n      method: 'POST',\n      headers: {\n        'auth_token': localStorage.getItem('auth_token')\n      }\n    });\n    const json = await response.json();\n    setAllNotes(json.notes);\n    return json;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Itemcontext.Provider, {\n    value: {\n      getUserById,\n      uploader,\n      clearItems,\n      isAdded,\n      items,\n      fetchAllItems,\n      addItem,\n      deleteItem,\n      editItem,\n      getUser,\n      userData,\n      allusers,\n      getAllUsers,\n      blockAUser,\n      getAllItems,\n      allitems,\n      item,\n      getAItem,\n      addplacementexp,\n      fetchPlacements,\n      placementItems,\n      pItem,\n      fetchPItem,\n      addnotes,\n      fetchAllNotes,\n      allNotes,\n      host\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Itemstates, \"iVR2iQojb9JzUBb34VwbD8D+/u4=\");\n\n_c = Itemstates;\nexport default Itemstates;\n\nvar _c;\n\n$RefreshReg$(_c, \"Itemstates\");","map":{"version":3,"sources":["C:/Users/yashc/Desktop/foundit2_final_g/foundit2_final_g/foundit-frontend/src/context APIs/items/Itemstates.js"],"names":["useState","Itemcontext","Itemstates","props","host","itemsinitially","items","setItems","item","setItem","allNotes","setAllNotes","userData","setUser","allusers","setAllusers","allitems","setAllitems","uploader","setUploader","placementItems","setPlacementItems","pItem","setPItem","isAdded","setisAdded","fetchAllItems","response","fetch","method","headers","localStorage","getItem","json","success","items_list","addItem","data","body","concat","savedItem","document","getElementById","click","alert","message","deleteItem","id","public_id","newItems","filter","e","_id","newAllItems","editItem","JSON","parse","stringify","index","length","element","name","description","type","date","place","image_name","clearItems","getAItem","addplacementexp","company_name","profile","No_students","No_rounds","intern_or_fte","round_exp","fetchPlacements","getAllItems","fetchPItem","console","log","getUser","user_data","getUserById","getAllUsers","users","blockAUser","addnotes","fetchAllNotes","notes","children"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport Itemcontext from \"./Itemcontext\";\r\n\r\nfunction Itemstates(props) {\r\n\r\n  const host=\"http://localhost:5000\"\r\n\r\n  const itemsinitially = [];\r\n  const [items, setItems] = useState(itemsinitially);\r\n  const [item, setItem] = useState(itemsinitially);\r\n  const [allNotes, setAllNotes] = useState(itemsinitially);\r\n  const [userData, setUser] = useState(itemsinitially);\r\n  const [allusers, setAllusers] = useState(itemsinitially);\r\n  const [allitems, setAllitems] = useState(itemsinitially);\r\n  const [uploader, setUploader] = useState(itemsinitially);\r\n  const [placementItems, setPlacementItems] = useState(itemsinitially);\r\n  const [pItem, setPItem] = useState(itemsinitially);\r\n\r\n  const [isAdded, setisAdded] = useState(false);\r\n\r\n  // 1. ******** Fetch all items using fetch API *********\r\n  const fetchAllItems = async () => {\r\n    // Method-1   ****API call****\r\n    const response = await fetch(`/api/item/fetchitems`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      }\r\n    });\r\n    const json = await response.json();\r\n    if (json.success) setItems(json.items_list);\r\n    return json;\r\n  }\r\n\r\n  // 2. ******** Add A Item ********\r\n  const addItem = async (data) => {\r\n    setisAdded(false);\r\n    const response = await fetch(`/api/item/uploaditem`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      },\r\n      body: data\r\n    });\r\n    const json = await response.json();\r\n    if (json.success) {\r\n      setisAdded(true);\r\n      setItems(items.concat(json.savedItem));\r\n      document.getElementById('modalDismiss2').click();\r\n    }\r\n    else {\r\n      alert(json.message);\r\n    }\r\n    return json.success;\r\n  }\r\n\r\n  // 3. ******** Delete A Item ********\r\n  const deleteItem = async (id, public_id) => {\r\n    const response = await fetch(`/api/item/deleteItem/${id}/${public_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'auth_token': localStorage.getItem('auth_token'),\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    const json = await response.json();\r\n    if (!json.success) {\r\n      alert(json.message);\r\n    } else {\r\n      const newItems = items.filter((e) => { return e._id !== id });\r\n      setItems(newItems);\r\n      const newAllItems = allitems.filter((e) => { return e._id !== id });\r\n      setAllitems(newAllItems);\r\n    }\r\n\r\n    return json.success;\r\n  }\r\n\r\n  // 4. ******** Edit a Item ********\r\n  const editItem = async (data, id, public_id) => {\r\n    const response = await fetch(`/api/item/updateItem/${id}/${public_id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      },\r\n      body: data\r\n    });\r\n    const json = await response.json();\r\n    if (json.success) {\r\n      const item = json.item;\r\n      let newItems = JSON.parse(JSON.stringify(items));\r\n      for (let index = 0; index < items.length; index++) {\r\n        const element = items[index];\r\n        if (element._id === id) {\r\n          newItems[index].name = item.name;\r\n          newItems[index].description = item.description;\r\n          newItems[index].type = item.type;\r\n          newItems[index].date = item.date;\r\n          newItems[index].place = item.place;\r\n          newItems[index].image_name = item.image_name;\r\n          break;\r\n        }\r\n      }\r\n      setItems(newItems);\r\n      return json.success;\r\n    } else {\r\n      alert(json.message);\r\n      return json.success;\r\n    }\r\n  }\r\n\r\n  // 5. ********clear the Items ********\r\n  const clearItems = () => {\r\n    setItems(itemsinitially);\r\n    setUser(itemsinitially);\r\n    setAllusers(itemsinitially);\r\n    setUploader(itemsinitially);\r\n    setAllitems(itemsinitially);\r\n  }\r\n\r\n  // 6. ******** Fetch a item using fetch API *********\r\n  const getAItem = async (id) => {\r\n    // Method-1   ****API call****\r\n    const response = await fetch(`/api/item/getAItem/${id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      }\r\n    });\r\n    const json = await response.json();\r\n    if (json.success) setItem(json.item);\r\n    return json;\r\n  }\r\n\r\n  // 5. ******** Add Placement ********\r\n  const addplacementexp = async (company_name, profile, date, No_students, No_rounds, intern_or_fte, round_exp) => {\r\n    const response = await fetch(`/api/item/addplacementexp`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      },\r\n      body: JSON.stringify({ company_name: company_name, profile: profile, date: date, No_students: No_students, No_rounds: No_rounds, intern_or_fte: intern_or_fte, round_exp: round_exp })\r\n    });\r\n    const json = await response.json();\r\n    return json.success;\r\n  }\r\n\r\n  // 6. ******** Fetch Placement ********\r\n  const fetchPlacements = async () => {\r\n    const response = await fetch(`/api/item/fetchPlacements`, {\r\n      method: 'POST',\r\n      headers: {\r\n        // 'Content-Type': 'application/json',\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      },\r\n      // body: JSON.stringify({company_name:company_name, profile:profile, date:date, No_students:No_students, No_rounds:No_rounds, intern_or_fte:intern_or_fte, round_exp:round_exp})\r\n    });\r\n    const json = await response.json();\r\n    if (json.success) setPlacementItems(json.allitems);\r\n    return json.success;\r\n  }\r\n\r\n  // 7. ****** Get All items || ADMIN Access ONLY ********\r\n  const getAllItems = async () => {\r\n    const response = await fetch(`/api/item/getAllItems`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      }\r\n    });\r\n    const json = await response.json();\r\n    if (json.success) setAllitems(json.allitems);\r\n    return json;\r\n  }\r\n\r\n\r\n  // 5. ******** Fetch Placement ********\r\n  const fetchPItem = async (_id) => {\r\n    const response = await fetch(`/api/item/fetchPItem/${_id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        // 'Content-Type': 'application/json',\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      },\r\n      // body: JSON.stringify({company_name:company_name, profile:profile, date:date, No_students:No_students, No_rounds:No_rounds, intern_or_fte:intern_or_fte, round_exp:round_exp})\r\n    });\r\n    const json = await response.json();\r\n    console.log(json);\r\n    if (json.success) setPItem(json.item);\r\n    return json;\r\n  }\r\n\r\n\r\n  // 1. ******** Get Loggedin User details ********\r\n  const getUser = async () => {\r\n    // API Call\r\n    const response = await fetch(`/api/auth/getuser`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      }\r\n    });\r\n    const json = await response.json();\r\n    setUser(json.user_data);\r\n    return json;\r\n  }\r\n\r\n  // 2. ******** Get User details with Id ********(Login Required)\r\n  const getUserById = async (id) => {\r\n    const response = await fetch(`/api/auth/getUserById/${id}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      }\r\n    });\r\n    const json = await response.json();\r\n    setUploader(json.uploader);\r\n    return json;\r\n  }\r\n\r\n  //3. ****** Get All user || ADMIN Access ONLY ********\r\n  const getAllUsers = async () => {\r\n    const response = await fetch(`/api/auth/getAllUsers`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      }\r\n    });\r\n    const json = await response.json();\r\n    setAllusers(json.users);\r\n    return json;\r\n  }\r\n\r\n  //4. ****** Block a user || ADMIN Access ONLY ********\r\n  const blockAUser = async (id) => {\r\n    const response = await fetch(`/api/auth/blockAUser/${id}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      }\r\n    });\r\n    const json = await response.json();\r\n    return json;\r\n  }\r\n\r\n //5. ****** add a noted ********\r\n  const addnotes= async (data) => {\r\n    setisAdded(false);\r\n    const response = await fetch(`/api/item/addnotes`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      },\r\n      body: data\r\n    });\r\n    const json = await response.json();\r\n    return json;\r\n  }\r\n\r\n  //6. ****** fetch All Notes ********\r\n  const fetchAllNotes= async () => {\r\n    const response = await fetch(`/api/item/fetchAllNotes`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'auth_token': localStorage.getItem('auth_token')\r\n      }\r\n    });\r\n    const json = await response.json();\r\n    setAllNotes(json.notes);\r\n    return json;\r\n  }\r\n\r\n\r\n  return (\r\n    <Itemcontext.Provider value={{ getUserById, uploader, clearItems, isAdded, items, fetchAllItems, addItem, deleteItem, editItem, getUser, userData, allusers, getAllUsers, blockAUser, getAllItems, allitems, item, getAItem, addplacementexp, fetchPlacements, placementItems, pItem, fetchPItem, addnotes, fetchAllNotes, allNotes, host}}>\r\n      {props.children}\r\n    </Itemcontext.Provider>\r\n  )\r\n}\r\n\r\nexport default Itemstates\r\n"]},"metadata":{},"sourceType":"module"}